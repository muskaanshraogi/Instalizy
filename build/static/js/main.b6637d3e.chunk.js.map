{"version":3,"sources":["backend/install.js","components/navbar.component.js","components/card.component.js","components/cardgrid.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","exec","require","error","result","console","log","useStyles","makeStyles","theme","root","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","display","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","contentShift","title","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","height","pointerEvents","inputRoot","color","inputInput","paddingLeft","Appbar","classes","React","useState","open","setOpen","setSearch","opt","Options","category","className","AppBar","Toolbar","IconButton","edge","aria-label","onClick","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","onChange","e","target","value","Drawer","anchor","paper","Divider","List","map","cat","index","ListItem","button","ListItemText","primary","secondary","number","minHeight","maxWidth","marginTop","avatar","text","header","AppCard","apps","Software","softwares","handleClick","install","app","Card","CardHeader","name","subheader","version","Avatar","alt","src","icon","divider","CardContent","component","description","CardActions","installed","Button","id","disabled","Gridstyle","CardGrid","state","style","Component","App","createMuiTheme","type","main","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b6637d3e.chunk.js","sourcesContent":["const install = () => {\n    const exec = require('child_process').exec;\n\n    exec('echo abcd', (error, result) => {\n        if(result) {\n            return console.log(result);\n        }\n        return console.log(error)\n    })\n    \n}\n\nmodule.exports = install;","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  InputBase,\n  Drawer,\n  Divider,\n  ListItem,\n  ListItemText,\n  List } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Options from './../data/drawer';\n\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport default function Appbar() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [search, setSearch] = React.useState(\"\");\n    const opt = Options.category;\n\n    const handleOpen = () => {\n        setOpen(true);\n    } \n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const handleChange = (e) => {\n        setSearch(e.target.value);\n        console.log(search)\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"open drawer\" onClick={handleOpen}>\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>Instalizy</Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}><SearchIcon/></div>\n                        <InputBase placeholder=\"Search…\" classes={{root: classes.inputRoot, input: classes.inputInput,}} inputProps={{ 'aria-label': 'search' }} onChange={handleChange}/>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <Drawer className={classes.drawer} variant=\"persistent\" anchor=\"left\" open={open} classes={{paper: classes.drawerPaper,}}>\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleClose}><ChevronLeftIcon /></IconButton>\n                </div>\n                <Divider />\n                <List className={classes.root}>{opt.map((cat, index) => (\n                    <ListItem button>\n                        <ListItemText primary={cat.title} secondary={cat.number} />\n                    </ListItem>\n                ))}</List>\n                <Divider />\n            </Drawer>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n//const { remote } = require('electron')\n//const { BrowserWindow } = remote;\t\nimport { Card,\n    CardHeader,\n    CardContent,\n    CardActions,\n    Avatar,\n    Typography,\n    Divider,\n    Button } from '@material-ui/core';\nimport Software from './../data/software.json';\nimport install from './../backend/install';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: 330,\n    maxWidth: 350,\n    marginLeft: '5%',\n    display: 'inline-block',\n    marginTop: '4%'\n  },\n  avatar: {\n      marginLeft: \"7%\",\n      backgroundColor: \"#ffffff\",\n      width: \"55px\",\n      height: \"55px\"\n  },\n  button: {\n      width: '36%',\n      marginLeft: '32%'\n  },\n  text: {\n      marginTop: '5%',\n      minHeight: 160\n  },\n  header: {\n      height: \"10%\"\n  }\n}));\n\nexport default function AppCard() {\n    const classes = useStyles();\n\n    const apps = Software.softwares;\n\n    const handleClick = () => {\n        install();\n    }\n\n    return (\n        <div>\n            {apps.map((app,index) => (\n                <Card className={classes.root}>\n                    <CardHeader title={app.name} subheader={app.version} className={classes.header} avatar={\n                        <Avatar aria-label=\"icon\" className={classes.avatar} ><img alt={app.name} src={app.icon} height=\"45px\"/></Avatar>\n                    }/>\n                    <Divider variant=\"inset\" className={classes.divider}/>\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.text}>{app.description}</Typography>\n                    </CardContent>\n                    <CardActions>\n                        {app.installed === \"false\" ?\n                            <Button variant=\"outlined\" color=\"primary\" className={classes.button} id={app.name} onClick={handleClick}>Install</Button> :\n                            <Button variant=\"outlined\" className={classes.button} disabled>Installed</Button>\n                        }\n                    </CardActions>\n                </Card>\n            ))};\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport AppCard from './card.component';\n\n\nvar Gridstyle = {\n    padding: \"3% 0\"\n}\n\nclass CardGrid extends Component {\n    state = {\n        \n    }\n    render() {\n        return(\n            <div style={Gridstyle}>\n                <AppCard/>\n            </div>\n        )\n    }\n}\n\nexport default CardGrid;\n","import React, { Component } from 'react';\nimport Appbar from './components/navbar.component';\nimport CardGrid from './components/cardgrid.component';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nclass App extends Component {\n  render() {\n    const theme = createMuiTheme({\n      palette: {\n        type: 'dark',\n        primary: {\n          main: '#5294e2',\n        },\n      }\n    });\n\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <Appbar/>\n          <CardGrid/>\n        </ThemeProvider>\n      </div>\n    );\n  } \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}